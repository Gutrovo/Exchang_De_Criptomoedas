/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import DAO.BancoDAO;
import DAO.Conexao;
import javax.swing.JOptionPane;
import controller.CadastroController;
import controller.ExtratoController;
import model.Pessoa;
import java.sql.Connection;
import java.sql.SQLException;

public class Depositar extends javax.swing.JFrame {

    private ExtratoController extratoController;
    private CadastroController cadastroController;

    public Depositar(CadastroController cadastroController, ExtratoController extratoController) {
        this.cadastroController = cadastroController; // Recebe o controlador na inicialização
        this.extratoController = extratoController; // Recebe o controlador de extrato
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSenhaDP = new javax.swing.JLabel();
        txtCPFDP = new javax.swing.JLabel();
        DisplayDP = new javax.swing.JTextField();
        DisplayDP1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        DisplayDP2 = new javax.swing.JTextField();
        btDepositar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtSenhaDP.setText("Senha:");

        txtCPFDP.setText("CPF:");

        DisplayDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayDPActionPerformed(evt);
            }
        });

        DisplayDP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayDP1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Valor a depositar:");

        DisplayDP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayDP2ActionPerformed(evt);
            }
        });

        btDepositar.setText("Depositar");
        btDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDepositarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCPFDP, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(DisplayDP1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSenhaDP, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DisplayDP, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)))
                .addGap(60, 60, 60))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(DisplayDP2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(btDepositar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSenhaDP)
                    .addComponent(DisplayDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCPFDP)
                    .addComponent(DisplayDP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(DisplayDP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btDepositar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DisplayDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayDPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DisplayDPActionPerformed

    private void DisplayDP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayDP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DisplayDP1ActionPerformed

    private void DisplayDP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayDP2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DisplayDP2ActionPerformed

    private void btDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDepositarActionPerformed
       // Obtém as entradas do usuário
    String cpf = DisplayDP1.getText(); // CPF do usuário
    String senha = DisplayDP.getText(); // Senha do usuário
    String valorStr = DisplayDP2.getText(); // Valor a depositar

    // Verifica se os campos estão vazios
    if (cpf.isEmpty() || senha.isEmpty() || valorStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos os campos devem ser preenchidos.");
        return;
    }

    double valor;
    try {
        valor = Double.parseDouble(valorStr); // Tenta converter o valor para double
        if (valor <= 0) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um valor positivo.");
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Valor inválido. Por favor, insira um número.");
        return;
    }

    try {
        // Conecta ao banco de dados
        Connection conn = new Conexao().getConnection();
        BancoDAO dao = new BancoDAO(conn);

        // Busca a pessoa pelo CPF
        Pessoa usuario = dao.consultarPorCPF(cpf);
        if (usuario != null && usuario.getSenha().equals(senha)) {
            // Adiciona o valor ao saldo atual
            double novoSaldo = usuario.getSaldo() + valor;
            dao.atualizarSaldo(cpf, novoSaldo); // Atualiza o saldo no banco

            // Registra a transação de depósito no extrato
            String tipoTransacao = "Depósito";
            String moeda = "Reais";  // Moeda a ser depositada
            extratoController.registrarTransacao(tipoTransacao, moeda, valor, valor, usuario);

            // Fecha a conexão
            conn.close();

            // Exibe a mensagem de sucesso com o saldo atualizado
            JOptionPane.showMessageDialog(this, "Depósito realizado com sucesso! Saldo atual: " + novoSaldo);
            dispose(); // Fecha a janela após o depósito
        } else {
            JOptionPane.showMessageDialog(this, "CPF ou senha incorretos.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao realizar depósito: " + e.getMessage());
    }



    }//GEN-LAST:event_btDepositarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Depositar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Depositar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Depositar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Depositar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Depositar().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DisplayDP;
    private javax.swing.JTextField DisplayDP1;
    private javax.swing.JTextField DisplayDP2;
    private javax.swing.JButton btDepositar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel txtCPFDP;
    private javax.swing.JLabel txtSenhaDP;
    // End of variables declaration//GEN-END:variables
}
